<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.integritylabsbrazil</groupId>
    <artifactId>architectural-guide-definition-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>ILB :: Architectural Guide Definition</name>
    <description>Architectural Guide Definition Bootstrap Parent</description>
    <url>http://www.integritylabsbrazil.com</url>
    <!-- ## Profiles
       # analysis -> executa a análise estática do código fonte e analisa as vulnerabilidades
       # docker   -> gera as imagens docker no modo local
       # spa      -> utiliza o Spring-boot-admin para monitorar e gerenciar a aplicação
       # trace    -> utiliza o ZipKin para fazer o trace das chamdas dos serviços da aplicação
       # h2       -> seta que o banco de dados utilizado será o H2
       # mysql    -> seta que o banco de dados utilizado será o mySQL (versão 8)
       # harbor   -> gera as imagens docker e as publica no harbor
       -->
    <properties>
        <java.version>21</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.release>21</maven.compiler.release>
        <!-- main technologies -->
        <spring-boot.version>3.2.8</spring-boot.version>
        <spring-cloud.version>2023.0.3</spring-cloud.version>
        <spring-security.version>6.0.2</spring-security.version>
        <overriden.image.tag>${project.version}</overriden.image.tag>

        <!-- dependency-versions -->
        <apt-maven-plugin.version>1.1.3</apt-maven-plugin.version>
        <assertj-core.version>3.19.0</assertj-core.version>
        <avro.version>1.11.3</avro.version>
        <build.arch>amd64</build.arch>
        <checkstyle-config.file>./others/etc/checkstyle/checkstyle.xml</checkstyle-config.file>
        <checkstyle.version>10.10.0</checkstyle.version>
        <cyclonedx-maven-plugin.version>2.7.7</cyclonedx-maven-plugin.version>
        <dependency-check-maven.version>6.0.5</dependency-check-maven.version>
        <dependency-check-maven-plugin.autoUpdate>true</dependency-check-maven-plugin.autoUpdate>
        <!--<dependency-check-maven-plugin.database></dependency-check-maven-plugin.database> -->
        <dependency-check-maven-plugin.skip>true</dependency-check-maven-plugin.skip>
        <ddd-commons.version>0.2.3</ddd-commons.version>
        <exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>
        <findbsecbugs-plugin.version>1.11.0</findbsecbugs-plugin.version>
        <git-commit-id-plugin.version>4.0.4</git-commit-id-plugin.version>
        <habor-image-name-substitutor.version>1.0.0</habor-image-name-substitutor.version>
        <jacoco.version>0.8.12</jacoco.version>
        <jaxb.version>4.0.5</jaxb.version>
        <junit.jupiter.version>5.7.0</junit.jupiter.version>
        <liquibase-heart-beat.version>2.1.0</liquibase-heart-beat.version>
        <liquibase.version>4.17.1</liquibase.version>
        <logstash-logback-encoder.version>6.6</logstash-logback-encoder.version>
        <lombok.version>1.18.32</lombok.version>
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <maven-checkstyle-plugin.version>3.4.0</maven-checkstyle-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven.compiler.release>${java.version}</maven.compiler.release>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <mssql.jdbc.version>11.2.3.jre17</mssql.jdbc.version>
        <mysql.connector.version>8.0.33</mysql.connector.version>
        <nashorn.version>15.4</nashorn.version>
        <openapi-generator-maven-plugin.version>6.3.0</openapi-generator-maven-plugin.version>
        <openapi-jackson-databind-nullable.version>0.2.1</openapi-jackson-databind-nullable.version>
        <jackson-datatype-problem.version>0.27.1</jackson-datatype-problem.version>
        <oracle.jdbc.driver.version>19.11.0.0</oracle.jdbc.driver.version>
        <problem-spring-web.version>0.28.0</problem-spring-web.version>
        <querydsl-jpa.version>5.1.0</querydsl-jpa.version>
        <spotbugs-exclusion.path>./others/etc/spotbugs/spotbugs-exclude.xml</spotbugs-exclusion.path>
        <spotbugs-maven-plugin.version>4.7.3.4</spotbugs-maven-plugin.version>
        <spotbugs.version>4.7.3</spotbugs.version>
        <spring-boot-admin-starter-client.version>2.6.6</spring-boot-admin-starter-client.version>
        <springfox.version>3.0.0</springfox.version>
        <swagger-annotations.version>2.2.20</swagger-annotations.version>
        <swagger-core-jakarta.version>2.2.8</swagger-core-jakarta.version>
        <swagger-request-validator-mockmvc.version>2.18.1</swagger-request-validator-mockmvc.version>
        <wiremock.version>3.9.1</wiremock.version>
        <skip-api>false</skip-api>
    </properties>

    <modules>
        <module>rest-api-web-guide-definition</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- SPRING BOOT -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-autoconfigure</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>test</scope>
            </dependency>
            <!-- END SPRING BOOT -->

            <!-- CHILDREN MODULES -->
            <dependency>
                <groupId>com.integritylabsbrazil</groupId>
                <artifactId>rest-api-web-guide-definition</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- END CHILDREN MODULES -->

            <!-- ZALANDO -->
            <dependency>
                <groupId>org.zalando</groupId>
                <artifactId>problem-spring-web</artifactId>
                <version>${problem-spring-web.version}</version>
            </dependency>
            <dependency>
                <groupId>org.zalando</groupId>
                <artifactId>jackson-datatype-problem</artifactId>
                <version>${jackson-datatype-problem.version}</version>
            </dependency>
            <!-- END ZALANDO -->

            <!-- Liquibase -->
            <dependency>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-core</artifactId>
                <version>${liquibase.version}</version>
            </dependency>

            <!-- Lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <!-- Jaxb -->
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-impl</artifactId>
                <version>${jaxb.version}</version>
            </dependency>
            <!-- Spring-boot-admin -->
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-client</artifactId>
                <version>${spring-boot-admin-starter-client.version}</version>
            </dependency>
            <!-- OpenAPI -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.swagger.core.v3</groupId>
                        <artifactId>swagger-annotations</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-core-jakarta</artifactId>
                <version>${swagger-core-jakarta.version}</version>
            </dependency>

            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-annotations.version}</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-bean-validators</artifactId>
                <version>${springfox.version}</version>
            </dependency>

            <dependency>
                <groupId>org.openapitools</groupId>
                <artifactId>jackson-databind-nullable</artifactId>
                <version>${openapi-jackson-databind-nullable.version}</version>
            </dependency>
            <!-- End OpenAPI -->

            <!-- Database -->
            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <version>${mysql.connector.version}</version>
            </dependency>
            <dependency>
                <groupId>com.oracle.database.jdbc</groupId>
                <artifactId>ojdbc10</artifactId>
                <version>${oracle.jdbc.driver.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microsoft.sqlserver</groupId>
                <artifactId>mssql-jdbc</artifactId>
                <version>${mssql.jdbc.version}</version>
            </dependency>
            <dependency>
                <groupId>com.querydsl</groupId>
                <artifactId>querydsl-jpa</artifactId>
                <version>${querydsl-jpa.version}</version>
                <classifier>jakarta</classifier>
            </dependency>
            <!-- Start Logging -->
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash-logback-encoder.version}</version>
            </dependency>
            <!-- Final Logging -->
            <!-- TESTS -->
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>5.11.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj-core.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>com.atlassian.oai</groupId>
                <artifactId>swagger-request-validator-mockmvc</artifactId>
                <version>${swagger-request-validator-mockmvc.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-test</artifactId>
                <type>pom</type>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.wiremock</groupId>
                <artifactId>wiremock-standalone</artifactId>
                <version>${wiremock.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>com.github.spullara.mustache.java</groupId>
                <artifactId>compiler</artifactId>
                <version>0.9.4</version>
            </dependency>
            <!-- Map Struct -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <!-- Nashorn -->
            <dependency>
                <groupId>org.openjdk.nashorn</groupId>
                <artifactId>nashorn-core</artifactId>
                <version>${nashorn.version}</version>
            </dependency>
            <!-- SpELAssert validation -->
            <dependency>
                <groupId>cz.jirutka.validator</groupId>
                <artifactId>validator-spring</artifactId>
                <version>1.1.0</version>
            </dependency>
            <!-- Avro -->
            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>${avro.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies/>
    <profiles>
        <profile>
            <id>analysis</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-checkstyle-plugin</artifactId>
                            <version>${maven-checkstyle-plugin.version}</version>
                            <dependencies>
                                <dependency>
                                    <groupId>com.puppycrawl.tools</groupId>
                                    <artifactId>checkstyle</artifactId>
                                    <version>${checkstyle.version}</version>
                                </dependency>
                            </dependencies>
                            <executions>
                                <execution>
                                    <id>validate</id>
                                    <phase>validate</phase>
                                    <configuration>
                                        <configLocation>${checkstyle-config.file}</configLocation>
                                        <!-- <suppressionsLocation>${checkstyle-suppression.file}</suppressionsLocation>			 -->
                                        <consoleOutput>false</consoleOutput>
                                        <failsOnError>false</failsOnError>
                                        <failOnViolation>false</failOnViolation>
                                        <logViolationsToConsole>false</logViolationsToConsole>
                                        <outputFileFormat>xml</outputFileFormat>
                                        <excludes>**/generated/**/*</excludes>
                                    </configuration>
                                    <goals>
                                        <goal>check</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>com.github.spotbugs</groupId>
                            <artifactId>spotbugs-maven-plugin</artifactId>
                            <version>${spotbugs-maven-plugin.version}</version>
                            <configuration>
                                <failOnError>false</failOnError>
                                <effort>max</effort>
                                <excludeFilterFile>${spotbugs-exclusion.path}</excludeFilterFile>
                                <plugins>
                                    <plugin>
                                        <groupId>com.h3xstream.findsecbugs</groupId>
                                        <artifactId>findsecbugs-plugin</artifactId>
                                        <version>${findbsecbugs-plugin.version}</version>
                                    </plugin>
                                </plugins>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>validate</id>
                                    <goals>
                                        <goal>check</goal>
                                    </goals>
                                    <phase>verify</phase>
                                </execution>
                            </executions>
                            <dependencies>
                                <!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
                                <dependency>
                                    <groupId>com.github.spotbugs</groupId>
                                    <artifactId>spotbugs</artifactId>
                                    <version>${spotbugs.version}</version>
                                </dependency>
                            </dependencies>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <version>${dependency-check-maven.version}</version>
                        <inherited>false</inherited>
                        <configuration>
                            <skip>${dependency-check-maven-plugin.skip}</skip>
                            <ossindexAnalyzerEnabled>false</ossindexAnalyzerEnabled>
                            <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
                            <formats>xml,html</formats>
                            <connectionTimeout>600000</connectionTimeout>
                            <autoUpdate>${dependency-check-maven-plugin.autoUpdate}</autoUpdate>
                            <dataDirectory>${dependency-check-maven-plugin.database}</dataDirectory>
                            <retireJsAnalyzerEnabled>false</retireJsAnalyzerEnabled>
                        </configuration>
                        <executions>
                            <execution>
                                <id>validate</id>
                                <goals>
                                    <goal>aggregate</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <!--Plugin Cyclone DX responsável por gerar o BOM.xml do projeto utilizado na integração com dependency track-->
                    <plugin>
                        <groupId>org.cyclonedx</groupId>
                        <artifactId>cyclonedx-maven-plugin</artifactId>
                        <version>${cyclonedx-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>makeAggregateBom</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <includeCompileScope>true</includeCompileScope>
                            <includeProvidedScope>false</includeProvidedScope>
                            <includeRuntimeScope>true</includeRuntimeScope>
                            <includeSystemScope>true</includeSystemScope>
                            <includeTestScope>false</includeTestScope>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <harbor.url>harbor-dev.xxx.com</harbor.url>
                <image.name>${project.groupId}/${project.artifactId}:latest</image.name>
                <builder.image>${harbor.url}/xxx-buildpacks/builder:jammy</builder.image>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-maven-plugin</artifactId>
                            <version>${spring-boot.version}</version>
                            <configuration>
                                <imageName>${image.name}</imageName>
                                <image>
                                    <builder>${builder.image}</builder>
                                    <env>
                                        <BP_JVM_VERSION>${java.version}.*</BP_JVM_VERSION>
                                    </env>
                                </image>
                                <layers>
                                    <enabled>true</enabled>
                                </layers>
                            </configuration>
                            <executions>
                                <execution>
                                    <goals>
                                        <goal>build-image</goal>
                                    </goals>
                                    <phase>package</phase>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>harbor</id>
            <properties>
                <harbor.project>core-dtw</harbor.project>
                <harbor.url>harbor-dev.xxx.com</harbor.url>
                <harbor.repository>${harbor.url}/${harbor.project}/${project.groupId}</harbor.repository>
                <image.name>${harbor.repository}/${project.artifactId}:${overriden.image.tag}</image.name>
                <builder.image>${harbor.url}/xxx-buildpacks/builder:jammy</builder.image>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-maven-plugin</artifactId>
                            <version>${spring-boot.version}</version>
                            <configuration>
                                <imageName>${image.name}-${build.arch}</imageName>
                                <publish>true</publish>
                                <docker>
                                    <publishRegistry>
                                        <username>${harbor.username}</username>
                                        <password>${harbor.password}</password>
                                        <url>${harbor.url}</url>
                                    </publishRegistry>
                                </docker>
                                <image>
                                    <builder>${builder.image}</builder>
                                    <env>
                                        <BP_JVM_VERSION>${java.version}.*</BP_JVM_VERSION>
                                    </env>
                                </image>
                                <layers>
                                    <enabled>true</enabled>
                                </layers>
                            </configuration>
                            <executions>
                                <execution>
                                    <goals>
                                        <goal>build-image</goal>
                                    </goals>
                                    <phase>package</phase>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>h2</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>!testDatabaseSpecified</name>
                </property>
            </activation>
            <properties>
                <testDatabase>h2</testDatabase>
            </properties>
        </profile>
        <profile>
            <id>oracle</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <testDatabaseSpecified>true</testDatabaseSpecified>
                <testDatabase>oracle</testDatabase>
            </properties>
        </profile>
        <profile>
            <id>mssql</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <testDatabaseSpecified>true</testDatabaseSpecified>
                <testDatabase>mssql</testDatabase>
            </properties>
        </profile>
        <profile>
            <id>mysql</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <testDatabaseSpecified>true</testDatabaseSpecified>
                <testDatabase>mysql</testDatabase>
            </properties>
        </profile>
        <profile>
            <id>embedded-kafka</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>!testBrokerSpecified</name>
                </property>
            </activation>
            <properties>
                <testBroker>embedded-kafka</testBroker>
            </properties>
        </profile>
        <profile>
            <id>containerized-kafka</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <testBrokerSpecified>true</testBrokerSpecified>
                <testBroker>containerized-kafka</testBroker>
            </properties>
        </profile>
        <profile>
            <id>test-others-than-api</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <skipOthersThanApi>false</skipOthersThanApi>
                <skip-api>true</skip-api>
            </properties>
        </profile>
        <profile>
            <id>test-api</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <skipOthersThanApi>true</skipOthersThanApi>
                <skip-api>false</skip-api>
            </properties>
        </profile>
    </profiles>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <pluginManagement>
            <plugins>
                <!--CORE MAVEN PLUGINS-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <parameters>true</parameters>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <compilerArgs>
                            <arg>-Amapstruct.defaultComponentModel=spring</arg>
                        </compilerArgs>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok-mapstruct-binding</artifactId>
                                <version>0.2.0</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <!--END CORE MAVEN PLUGINS-->
                <!-- QUERYDSL -->
                <plugin>
                    <groupId>com.mysema.maven</groupId>
                    <artifactId>apt-maven-plugin</artifactId>
                    <version>${apt-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>process</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>target/generated-sources/query-dsl/java</outputDirectory>
                                <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
                            </configuration>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>com.querydsl</groupId>
                            <artifactId>querydsl-apt</artifactId>
                            <version>${querydsl-jpa.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <!-- JACOCO -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                    <configuration>
                        <excludes>
                            <exclude>**/generated/**/*.class</exclude>
                            <exclude>*/dto/*</exclude>
                            <exclude>*/config/*</exclude>
                            <exclude>**/*Application*</exclude>
                        </excludes>
                        <includes>
                            <include>com/integritylabsbrazil/**/**</include>
                        </includes>
                    </configuration>
                    <executions>
                        <execution>
                            <id>default-prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-report</id>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
